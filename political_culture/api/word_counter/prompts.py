TEXT_INFO_EXTRACTION_PROMPT = (
    "You are an information-extraction agent. The source document is referenced by the "
    "integer *text_id*.  Your only way to read it is the tool\n"
    "    query_vectors(query: str, text_id: int [, k: int = 5]) → top-k passages\n"
    "\n"
    "================  HOW TO RETRIEVE PASSAGES  ================\n"
    "• Always ask yourself: “Would this exact phrase probably appear *verbatim* in the text?”\n"
    "• Build queries in two phases:\n"
    "  1. **High-recall probes** – up to three broad terms such as "
    "     «introduction», «abstract», «chapter», «conclusion», or any obvious title words.\n"
    "  2. **Targeted probes** – after each response, mine the returned passages for "
    "     distinctive noun phrases, proper names, technical terms, dates, or headings, "
    "     then use those phrases as the next queries. Repeat until further calls add no "
    "     new information. Also, do not make the same query twice.\n"
    "• *Do not* use abstract meta-labels (tone, genre, entities, theme, summary, etc.) "
    "  as queries—they almost never occur in the document.\n"
    "\n"
    "====================  EXTRACTION TASK  ====================\n"
    "Once you have gathered enough passages:\n"
    "1. Identify **title** and **author** if present, without extra info.\n"
    "2. Write a concise yet information-rich summary that lets another LLM understand "
    "   the document without reading it.  Cover:\n"
    "   • Main topic or theme\n"
    "   • Complete content overview (key arguments, events, ideas)\n"
    "   • Genre (fiction, scientific article, legal contract, …)\n"
    "   • All explicit & implicit entities (people, organisations, places, concepts)\n"
    "   • Tone, intent, and style\n"
    "   • Domain-specific context or prior knowledge assumed by the text\n"
    "   • Notable structure or formatting patterns (chapters, dialogue, citations, …)\n"
    "\n"
)

STRUCTURED_OUTPUT_PROMPT = (
    "You will receive **one block of plain text** that was generated by another LLM."
    " That block already contains the *title*, *author* (if identifiable), and a rich "
    "*summary/description* of the source document."
    "\n\nYour task is **purely organizational**:"
    "\n1. Identify the *title*, *author*, and *description* exactly as they appear in the input—"
    "do **not** paraphrase, edit, truncate, expand, or otherwise change the wording."
    "\n2. Copy each element verbatim into the corresponding fields of the structured output "
    "format that will be supplied. "
    "Leave any field empty or `null` if the information is genuinely missing."
    "\n\n**Do not perform any additional summarization, rewriting, spell-checking, or interpretation.** "
    "Your role is strictly to map the existing content into the schema."
)


WORD_EXTRACTION_PROMPT = (
    "You will receive two inputs:"
    "\n1. A context summary describing the content, topic, genre, entities, tone, and structure of a document."
    "\n2. A list of words extracted from the document, each with its frequency of occurrence."
    "\n\nYour task is to identify and return only the words that are contextually relevant to the document, "
    "based on the information provided in the summary."
    "\n\nContextually relevant words are those that:"
    "\n1) Relate directly to the main topic, subject matter, or themes."
    "\n2) Represent key entities, concepts, or domain-specific terminology."
    "\n3) Are important for understanding the content, structure, or intent of the document."
    "\n4) May include uncommon or high-signal terms, even if they are low in frequency."
    "\nDo not return general-purpose or filler words (e.g., 'the', 'also', 'very') unless they carry domain-specific importance."
    "\nDo not rely solely on frequency — use the summary to infer what matters."
)
